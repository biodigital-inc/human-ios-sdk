{"version":3,"sources":["assets/js/index.js"],"names":["setActiveTab","emitActiveUrl","params","URLSearchParams","decodeURI","document","location","search","substring","forEach","value","get","sessionStorage","setItem","accountType","getItem","subscription","plan","setButtonsToContactUs","setCurrentPlan","inIframe","window","parent","sendParentMessage","action","label","metadata","iframeMessage","postMessage","tabs","path","pathname","querySelector","classList","add","tab","includes","remove","card","cardButton","toggle","setAttribute","innerHTML","addEventListener","event","preventDefault","querySelectorAll","button","target","getAttribute","isIndividualPlan","isResponsive","matchMedia","matches","personalPlusPlan","elementTop","scollY","getBoundingClientRect","top","pageYOffset","scrollTo","behavior"],"mappings":";AAAAA,IACAC,IAGA,IAAIC,EAAS,IAAIC,gBAAgBC,UAAUC,SAASC,SAASC,OAAOC,UAAU,KAC9E,CAAC,cAAe,gBAAgBC,QAAQ,SAAAC,GAClCR,EAAOS,IAAID,IACbE,eAAeC,QAAQH,EAAOR,EAAOS,IAAID,IAAU,MAKvD,IAAMI,EAAcF,eAAeG,QAAQ,eACrCC,EAAeJ,eAAeG,QAAQ,gBACxCE,EAAO,GAEX,QAAQ,GAGAD,IAAiB,mCAAjBA,EACJE,IACA,MAEIJ,IAAgB,SAAhBA,EACJK,EAAe,YACf,MAGIL,IAAgB,eAAhBA,EACJK,EAAe,iBAMnB,IAAMC,EAAWC,OAAOf,WAAae,OAAOC,OAAOhB,SAqBnD,SAASiB,EAAkBC,EAAQC,EAAOC,GACpC,GAACF,EAAD,CAKEG,IAAAA,EAAgB,CACpBH,OAAQA,EACRC,MAAOA,GAAS,GAChBC,SAAUA,GAAY,IAGxBL,OAAOC,OAAOM,YAAYD,EAAe,MAG3C,SAAS3B,IACD6B,IACAC,EAAOT,OAAOf,SAASyB,SAE7B1B,SAAS2B,cAAuCC,yBAAAA,UAAUC,IAAI,mBAHjD,CAAC,WAAY,SAAU,cAK/BzB,QAAQ,SAAA0B,GACPL,EAAKM,SAASD,KAChB9B,SAAS2B,cAA4BC,cAAAA,UAAUI,OAAO,mBACtDhC,SAAS2B,cAA2BG,aAAAA,OAAAA,EAAQF,MAAAA,UAAUC,IAAI,sBAKhE,SAASjC,IACH6B,IAAAA,EAAOT,OAAOf,SAASyB,SAGd,MAATD,IACFA,EAAO,oBAGTP,EAAkB,QAA2B,iBAAA,CAC3CO,KAAMA,IAIV,SAASX,EAAeF,GAEhBqB,IAAAA,EAAOjC,SAAS2B,cAA4Bf,cAAAA,OAAAA,EAAlD,MACIqB,GAAAA,EAAM,CACFC,IAAAA,EAAaD,EAAKN,cAAc,cACtCO,EAAWN,UAAUO,OAAO,mBAAmB,GAC/CD,EAAWN,UAAUO,OAAO,kBAAkB,GAC9CD,EAAWN,UAAUO,OAAO,kBAAkB,GAC9CD,EAAWE,aAAa,YAAY,GACpCF,EAAWG,UAAY,eACvBH,EAAWI,iBAAiB,QAAS,SAACC,GACpCA,EAAMC,oBAKZ,SAAS3B,IACSb,SAASyC,iBAAiB,cAElCrC,QAAQ,SAAAsC,GACdA,EAAON,aAAa,cAAe,WACnCM,EAAOL,UAAY,eAlFvBrC,SAASyC,iBAAiB,cAAcrC,QAAQ,SAACuC,GAChDA,EAAOL,iBAAiB,QAAS,SAACC,GAG7BxB,GAAAA,EAAU,CACbwB,EAAMC,iBAEGnB,IAAAA,EAAW,CACfT,KAAM+B,EAAOC,aAAa,aAAe,GACzCzB,OAAQwB,EAAOC,aAAa,gBAAkB,IAG/CvB,EAAST,MACRM,EAAkB,QAAS,GAAIG,QA0EvCL,OAAOsB,iBAAiB,OAAQ,WACxBb,IACAoB,EADO7B,OAAOf,SAASyB,SACCK,SAAS,cACjCe,GAES,IAFM9B,OAClB+B,WAAW,sBACXC,QAECH,GAAAA,GAAoBC,EAAc,CAC9BG,IAAAA,EAAmBjD,SAAS2B,cAAlC,+BACIsB,GAAAA,EAAkB,CACdC,IAKAC,EALaF,EAAiBG,wBAAwBC,IACxCrC,OAAOsC,aACV,GAIjBtC,OAAOuC,SAAS,CAAEF,IAAKF,EAAQK,SAAU","file":"js.a3b7d070.js","sourceRoot":"../src","sourcesContent":["setActiveTab();\nemitActiveUrl();\n\n// Cache any passed params for use between page changes\nlet params = new URLSearchParams(decodeURI(document.location.search.substring(1)));\n['accountType', 'subscription'].forEach(value => {\n  if (params.get(value)) {\n    sessionStorage.setItem(value, params.get(value) || '');\n  }\n})\n\n// Map accountType and subscription to plans\nconst accountType = sessionStorage.getItem('accountType');\nconst subscription = sessionStorage.getItem('subscription');\nlet plan = '';\n\nswitch (true) {\n  // When the user has an active free trial, flip all buttons to contact us\n  // so they don't mistakenly go through sign up again.\n  case (subscription === 'school & business - free trial'):\n    setButtonsToContactUs();\n    break;\n\n  case (accountType === 'free'): \n    setCurrentPlan('personal');\n    break;\n  \n  // Valid premium account when accoun type is passed\n  case (accountType === 'individual'):\n    setCurrentPlan('personal-plus');\n    break;\n}\n\n\n// Plan Selection\nconst inIframe = window.location !== window.parent.location;\n\ndocument.querySelectorAll('[data-cta]').forEach((target) => {\n\ttarget.addEventListener('click', (event) => {\n\t\t// When the pricing page is served in an iframe, override the default link click behavior\n\t\t// and pass back the CTA info for the parent (human.biodigital.com) to handle instead.\n\t\tif (inIframe) {\n\t\t\tevent.preventDefault();\n\n      const metadata = {\n        plan: target.getAttribute('data-cta') || '',\n        action: target.getAttribute('data-action') || ''\n      }\n\n\t\t\tif (metadata.plan) {\n        sendParentMessage('close', '', metadata);\n\t\t\t}\n\t\t}\n\t});\n});\n\nfunction sendParentMessage(action, label, metadata) {\n  if (!action) {\n    return;\n  }\n\n  // Implements IframeMessage interface from Human Studio next iframe-dialog.component.ts\n  const iframeMessage = {\n    action: action,\n    label: label || '',\n    metadata: metadata || {}\n  }\n\n  window.parent.postMessage(iframeMessage, '*');\n}\n\nfunction setActiveTab() {\n  const tabs = ['business', 'school', 'individual'];\n  const path = window.location.pathname;\n\n  document.querySelector(`[data-tab=individual]`).classList.add('button-selected');\n\n  tabs.forEach(tab => {\n    if (path.includes(tab)) {\n      document.querySelector(`[data-tab]`).classList.remove('button-selected');\n      document.querySelector(`[data-tab=${tab}]`).classList.add('button-selected');\n    }\n  });\n}\n\nfunction emitActiveUrl() {\n  let path = window.location.pathname;\n\n  // Site defaults to showing individual when no specific path is defined\n  if (path === '/') {\n    path = '/individual.html';\n  }\n  \n  sendParentMessage('track', `Pricing - View`, {\n    path: path\n  });\n}\n\nfunction setCurrentPlan(plan) {\n  // When the existing plan is passed, disable the button.\n  const card = document.querySelector(`[data-card=${plan}]`);\n  if (card) {\n    const cardButton = card.querySelector('[data-cta]');\n    cardButton.classList.toggle('button-disabled', true);\n    cardButton.classList.toggle('button-outline', false);\n    cardButton.classList.toggle('button-primary', false);\n    cardButton.setAttribute('disabled', true);\n    cardButton.innerHTML = 'Current plan';\n    cardButton.addEventListener('click', (event) => {\n      event.preventDefault();\n    });\n  }\n}\n\nfunction setButtonsToContactUs() {\n  const buttons = document.querySelectorAll('[data-cta]');\n\n  buttons.forEach(button => {\n    button.setAttribute('data-action', 'contact');\n    button.innerHTML = 'Contact Us';\n  })\n}\n\n// Special case: scroll to Personal Plus plan for individuals on responsive layout\nwindow.addEventListener('load', function () {\n  const path = window.location.pathname;\n  const isIndividualPlan = path.includes('individual');\n  const isResponsive = window\n    .matchMedia('(min-width: 960px)')\n    .matches === false;\n\n  if (isIndividualPlan && isResponsive) {\n    const personalPlusPlan = document.querySelector(`[data-card=\"personal-plus\"]`);\n    if (personalPlusPlan) {\n      const elementTop = personalPlusPlan.getBoundingClientRect().top;\n      const pageYOffset = window.pageYOffset;\n      const yOffset = -24;\n\n      // scroll into view\n      const scollY = elementTop + pageYOffset + yOffset;\n      window.scrollTo({ top: scollY, behavior: 'smooth' });\n    }\n  }\n});\n"]}